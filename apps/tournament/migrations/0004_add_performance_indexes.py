# Generated by Django 5.2.5 on 2025-08-19 15:04

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("tournament", "0003_song_song_tournament_wins_idx_and_more"),
    ]

    operations = [
        # Add performance indexes for frequently queried fields
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS voting_session_status_created_idx ON voting_sessions (status, created_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS voting_session_status_created_idx;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS voting_session_user_status_idx ON voting_sessions (user_id, status) WHERE user_id IS NOT NULL;",
            reverse_sql="DROP INDEX IF EXISTS voting_session_user_status_idx;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS voting_session_session_key_status_idx ON voting_sessions (session_key, status) WHERE session_key IS NOT NULL;",
            reverse_sql="DROP INDEX IF EXISTS voting_session_session_key_status_idx;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS match_session_round_match_idx ON matches (session_id, round_number, match_number);",
            reverse_sql="DROP INDEX IF EXISTS match_session_round_match_idx;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS vote_created_at_idx ON votes (created_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS vote_created_at_idx;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS song_pick_rate_idx ON songs (total_picks DESC, total_wins DESC) WHERE total_picks > 0;",
            reverse_sql="DROP INDEX IF EXISTS song_pick_rate_idx;"
        ),
    ]
